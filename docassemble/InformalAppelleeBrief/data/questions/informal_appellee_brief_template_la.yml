---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAnyState:any_state.yml
---
metadata:
  title: >-
    Informal Appellee Brief
  short title: >-
    Informal Appellee Brief
  description: |-
    This interview helps someone in Massachusetts complete your Informal Appellee Brief.
  tags:
    - "CO-03-00-00-00"
  authors:
    - Suffolk University LIT Clinic
  original_form:
    - https://www.mass.gov/info-details/appeals-court-informal-brief-pilot-program
  allowed_courts: 
    - "Appeals Court"
  typical_role: "defendant"
  al_weaver_version: "1.10.2"
  generated_on: "2023-11-01"
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-InformalAppelleeBriefTemplateLa'
---
code: |
  interview_short_title = "Complete your Informal Appellee Brief"
---
code: |
  al_form_type = "appeal" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
  - other_parties: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_informal_appellee_brief_template_la: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_informal_appellee_brief_template_la
code: |
  # Set the allowed courts for this interview
  allowed_courts = ['Appeals Court']
  nav.set_section("review_informal_appellee_brief_template_la")
  user_role = "defendant"
  user_ask_role = "defendant"
  users.gather()
  set_parts(subtitle=str(users))
  users[0].pronouns
  users[0].address.address
  set_progress(14)
  users[0].email
  lower_court
  docket_number
  set_progress(28)
  plaintiffs.gather()
  defendants.gather()
  issues
  set_progress(42)
  case_history
  statement_of_facts
  argument
  set_progress(56)
  conclusion
  other_parties.gather()
  other_parties[0].address.address
  set_progress(70)
  service_date
  interview_order_informal_appellee_brief_template_la = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  informal_appellee_brief_template_la_intro
  interview_order_informal_appellee_brief_template_la
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  informal_appellee_brief_template_la_download
---
comment: |
  This question is used to introduce your interview. Please customize
id: Informal_Appellee_Brief
continue button field: informal_appellee_brief_template_la_intro
question: |
  Informal Appellee Brief
subquestion: |
  This interview will help you complete your Informal Appellee Brief.
  
  Before you get started, please gather all documents from your lower court case proceedings.
  
  When you are finished, you will need to:
  
  1. File a Record Appendix (see _____)
  2. 
  
  Most people take about _______ minutes to finish this interview.
---
id: About You
question: |
  Your pronouns
fields:
  - "Pronouns": users[0].pronouns
    input type: dropdown
    choices:
      - He/Him
      - She/Her
      - Other
---
id: Your Earlier Case
question: |
  Name of the lower court in your case
subquestion: |
  The name of the lower court can be found on any documents received from the court prior to this appeal.
fields:
  - "Lower Court Name": lower_court
---
id: Issues on Appeal
question: |
  Issues on Appeal
subquestion: |
  Describe the specific legal issue(s) which is the issue the Appellant is appealing your case on.
fields:
  - "Issues": issues
    input type: area
---
id: Case History
question: |
  Case History
subquestion: |
  Describe the steps in the legal system which have gotten your case to this point.
fields:
  - "Case History": case_history
    input type: area
---
id: Statement of Facts
question: |
  Statement of Facts
subquestion: |
  Describe in detail all of the important facts of your case, including what led up to the legal proceedings beginning your case.
fields:
  - "Statement of Facts": statement_of_facts
    input type: area
---
id: Argument
question: |
  Argument
subquestion: |
  Here is where you can make your legal argument. Using specific facts and applicable law, describe in detail why you should prevail in this case. Only address the specific issue(s) on appeal.
fields:
  - "Argument": argument
    input type: area
---
id: Conclusion
question: |
  Conclusion
subquestion: |
  Summarize your argument in a brief statement. Then, lay out the specific relief you are requesting. (ie. what you want the court to do)
fields:
  - "Conclusion": conclusion
    input type: area
---
id: Certificate of Service
question: |
  Certificate of Service
fields:
  - "Date of Service": service_date
    datatype: date
  - "Today's Date": full_date
    datatype: date
---
id: preview informal_appellee_brief_template_la
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_informal_appellee_brief_template_la'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: informal_appellee_brief_template_la_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: informal appellee brief template la review screen
event: review_informal_appellee_brief_template_la
question: |
  Review your answers
review:
  - Edit: defendants.revisit
    button: |
      **Defendants**

      % for item in defendants:
        * ${ item }
      % endfor
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: conclusion
    button: |
      **Conclusion**:
      ${ conclusion }
  - Edit: plaintiffs.revisit
    button: |
      **Plaintiffs**

      % for item in plaintiffs:
        * ${ item }
      % endfor
  - Edit: issues
    button: |
      **Issues**:
      ${ issues }
  - Edit: case_history
    button: |
      **Case History**:
      ${ case_history }
  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: statement_of_facts
    button: |
      **Statement of Facts**:
      ${ statement_of_facts }
  - Edit: service_date
    button: |
      **Date of Service**:
      ${ service_date }
  - Edit: full_date
    button: |
      **Today's Date**:
      ${ full_date }
  - Edit: argument
    button: |
      **Argument**:
      ${ argument }
  - Edit: lower_court
    button: |
      **Lower Court Name**:
      ${ lower_court }
---
continue button field: defendants.revisit
question: |
  Edit defendants
subquestion: |
  ${ defendants.table }

  ${ defendants.add_action() }
---
table: defendants.table
rows: defendants
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Pronouns: |
      row_item.pronouns if defined("row_item.pronouns") else ""
edit:
  - signature
  - address.address
  - email
  - name.first
  - pronouns
confirm: True

---
continue button field: plaintiffs.revisit
question: |
  Edit plaintiffs
subquestion: |
  ${ plaintiffs.table }

  ${ plaintiffs.add_action() }
---
table: plaintiffs.table
rows: plaintiffs
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - name.first
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - address.address
  - name.first
confirm: True

---
id: download informal_appellee_brief_template_la
event: informal_appellee_brief_template_la_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_informal_appellee_brief_template_la'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - informal_appellee_brief_template_la_Post_interview_instructions: ALDocument.using(title="Instructions", filename="informal_appellee_brief_template_la_next_steps.docx", enabled=True, has_addendum=False)
  - informal_appellee_brief_template_la_attachment: ALDocument.using(title="Informal Appellee Brief", filename="informal_appellee_brief_template_la", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[informal_appellee_brief_template_la_Post_interview_instructions, informal_appellee_brief_template_la_attachment], filename="informal_appellee_brief_template_la", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[informal_appellee_brief_template_la_attachment],  filename="informal_appellee_brief_template_la", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: informal_appellee_brief_template_la_next_steps
  docx template file: informal_appellee_brief_template_la_next_steps.docx
  variable name: informal_appellee_brief_template_la_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: informal appellee brief template la
  filename: informal_appellee_brief_template_la
  variable name: informal_appellee_brief_template_la_attachment[i]
  skip undefined: True
  docx template file: informal_appellee_brief_template_la.docx
  tagged pdf: True



